########## String Literals ###########
str0: "B: "
str1: "Money: "
str2: ""
str3: "a"
str4: "A: "
######################################
########## Dispatch Vectors ##########
_DV_A: [_A_test,_A_init,_A_print]
_DV_B: [_A_test,_B_init,_B_print]
#####################################

#init in B
_B_init:

#Assignment on line 5
Move id0,R0
Move this,R1
MoveField R0,R1.1

#Assignment on line 6
Move 1000,R0
Move this,R1
MoveField R0,R1.4

#Assignment on line 7
Move 7,R0
Move this,R1
MoveField R0,R1.2

#Assignment on line 8
Move this,R0
MoveField R0.2,R1
Mul 4,R1
Library __allocateArray(R1),R2
Move this,R1
MoveField R2,R1.3
Move 0,R0
Move R0,i30

#While at 10
_loop0:

#Logical Binary Op at line 10
Move i30,R0
Move this,R1
MoveField R1.3,R2
ArrayLength R2,R3
Compare R0,R3
JumpLE _cond0
Move 1,R3
Jump _end1
_cond0:
Move 0,R3
_end1:
Compare 0,R3
JumpTrue _end0

#Assignment on line 11
Move i30,R0
Move this,R2
MoveField R2.3,R4
Move i30,R1
MoveArray R0,R4[R1]

#Assignment on line 12

#Math binary operation '+' at line 12
Move i30,R0
Move 1,R1
Add R1,R0
Move R0,i30
Jump _loop0
_end0:
Return 9999

##############################

#print in B
_B_print:

#Library call println at line 17

#Math binary operation '+' at line 17
Move this,R0
MoveField R0.1,R1
Move str0,R2
Library __stringCat(R2,R1),R4
Library __println(R4),Rdummy

#Library call print at line 18
Move str1,R1
Library __print(R1),Rdummy

#Library call printi at line 19
Move this,R1
MoveField R1.4,R2
Library __printi(R2),Rdummy

#Library call println at line 20
Move str2,R0
Library __println(R0),Rdummy
Move 0,R0
Move R0,i31

#While at 22
_loop1:

#Logical Binary Op at line 22
Move i31,R0
Move this,R2
MoveField R2.3,R4
ArrayLength R4,R1
Compare R0,R1
JumpLE _cond1
Move 1,R1
Jump _end3
_cond1:
Move 0,R1
_end3:
Compare 0,R1
JumpTrue _end2

#Library call printi at line 23
Move this,R0
MoveField R0.3,R4
Move i31,R2
MoveArray R4[R2],R5
Library __printi(R5),Rdummy

#Assignment on line 24

#Math binary operation '+' at line 24
Move i31,R5
Move 1,R6
Add R6,R5
Move R5,i31
Jump _loop1
_end2:
Return 9999

##############################

#main in A
_ic_main:

#New Class A at line 36
Library __allocateObject(16),R0
MoveField _DV_A,R0.0
Move R0,a32

#New Class B at line 37
Library __allocateObject(20),R0
MoveField _DV_B,R0.0
Move R0,b33

#Virtual Call test at line 38
Move a32,R0
VirtualCall R0.0(),Rdummy

#Virtual Call test at line 39
Move b33,R2
VirtualCall R2.0(),Rdummy
Library __exit(0),Rdummy

##############################

#test in A
_A_test:

#Virtual Call init at line 45
Move this,R4
VirtualCall R4.1(id0=str3),Rdummy

#Virtual Call print at line 46
Move this,R5
VirtualCall R5.2(),Rdummy
Return 9999

##############################

#init in A
_A_init:

#Assignment on line 50
Move id0,R6
Move this,R7
MoveField R6,R7.1

#Assignment on line 51
Move 5,R6
Move this,R7
MoveField R6,R7.2

#Assignment on line 52
Move this,R6
MoveField R6.2,R7
Mul 4,R7
Library __allocateArray(R7),R8
Move this,R7
MoveField R8,R7.3
Move 0,R6
Move R6,i34

#While at 54
_loop2:

#Logical Binary Op at line 54
Move i34,R6
Move this,R7
MoveField R7.3,R8
ArrayLength R8,R9
Compare R6,R9
JumpLE _cond2
Move 1,R9
Jump _end5
_cond2:
Move 0,R9
_end5:
Compare 0,R9
JumpTrue _end4

#Assignment on line 55
Move i34,R6
Move this,R8
MoveField R8.3,R10
Move i34,R7
MoveArray R6,R10[R7]

#Assignment on line 56

#Math binary operation '+' at line 56
Move i34,R6
Move 1,R7
Add R7,R6
Move R6,i34
Jump _loop2
_end4:
Return 9999

##############################

#print in A
_A_print:

#Library call println at line 62

#Math binary operation '+' at line 62
Move this,R6
MoveField R6.1,R7
Move str4,R8
Library __stringCat(R8,R7),R10
Library __println(R10),Rdummy
Move 0,R7
Move R7,i35

#While at 65
_loop3:

#Logical Binary Op at line 65
Move i35,R7
Move this,R8
MoveField R8.3,R10
ArrayLength R10,R6
Compare R7,R6
JumpLE _cond3
Move 1,R6
Jump _end7
_cond3:
Move 0,R6
_end7:
Compare 0,R6
JumpTrue _end6

#Library call printi at line 66
Move this,R7
MoveField R7.3,R10
Move i35,R8
MoveArray R10[R8],R11
Library __printi(R11),Rdummy

#Assignment on line 67

#Math binary operation '+' at line 67
Move i35,R11
Move 1,R12
Add R12,R11
Move R11,i35
Jump _loop3
_end6:

#Library call println at line 69
Move str2,R7
Library __println(R7),Rdummy
Return 9999

##############################
