########## String Literals ###########
str0: "hello"
######################################
########## Class layouts #############
#Class A:
#Field offsets:
#	str - 1
#	i - 2

#Class B:
#Field offsets:
#	str - 1
#	i - 2
#	j - 3

#Class C:
#Field offsets:

########## Dispatch Vectors ##########
_DV_A: [_A_vfunc]
_DV_B: [_B_vfunc]
_DV_C: []
#####################################

#sfunc in A
_A_sfunc:

#If at line 6
Move b0,R0
Compare 0,R0
JumpTrue _cond1
_cond0:
Move 5,R1
Move R1,k29
Move 1,R1
Return R1
Jump _end0
_cond1:

#New Class A at line 13
Library __allocateObject(12),R1
MoveField _DV_A,R1.0
Move R1,x30

#Assignment on line 14
Move 9,R1
Move x30,R2
MoveField R1,R2.2

#Assignment on line 15
Move str0,R1
Move x30,R2
MoveField R1,R2.1
Move 0,R1
Return R1
_end0:
Return 9999

##############################

#vfunc in A
_A_vfunc:
Move max0,R1
Mul 4,R1
Library __allocateArray(R1),R2
Move R2,arr31
Move 0,R1
Move R1,i32

#While at 23
_loop0:

#Logical Binary Op at line 23
Move i32,R1
Move max0,R2
Compare R1,R2
JumpLE _cond2
Move 1,R2
Jump _end2
_cond2:
Move 0,R2
_end2:
Compare 0,R2
JumpTrue _end1

#Assignment on line 24
Move val0,R1
Move arr31,R3
Move i32,R4
MoveArray R1,R3[R4]

#Assignment on line 25

#Math binary operation '+' at line 25
Move i32,R1
Move 1,R3
Add R3,R1
Move R1,i32

#Library call printi at line 26
Move i32,R1
Library __printi(R1),Rdummy

#If at line 27

#Logical Binary Op at line 27
Move a0,R1
Move 0,R3
Compare R1,R3
JumpFalse _cond3
Move 1,R3
Jump _end3
_cond3:
Move 0,R3
_end3:
Compare 0,R3
JumpTrue _end4
_cond4:
Jump _end1
_end4:
Jump _loop0
_end1:
Return 9999

##############################

#vfunc in B
_B_vfunc:
Return 9999

##############################

#main in C
_ic_main:
Library __exit(0),Rdummy

##############################
