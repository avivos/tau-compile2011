########## String Literals ###########
str0: "You"
str1: "----"
str2: "Will"
str3: "We"
str4: "exit"
str6: "Rock"
######################################
########## Class layouts #############
#Class Chips:
#Field offsets:
#	b - 1

#Class Shnizel_Dag:
#Field offsets:
#	i - 1
#	s - 2
#	arr - 3
#	c - 4

#Class Gidim:
#Field offsets:
#	counter - 1

#Class Falafel:
#Field offsets:

#Class Shnizel_Ayala:
#Field offsets:

########## Dispatch Vectors ##########
_DV_Chips: []
_DV_Shnizel_Dag: []
_DV_Gidim: [_Gidim_test]
_DV_Falafel: []
_DV_Shnizel_Ayala: []
#####################################

#test in Gidim
_Gidim_test:

#Assignment on line 19

#Math binary operation '+' at line 19
Move this,R0
MoveField R0.1,R1
Move 1,R2
Add R2,R1
Move this,R2
MoveField R1,R2.1

#If at line 20

#Logical Binary Op at line 20
Move this,R0
MoveField R0.1,R1
Move 3,R2
Compare R1,R2
JumpFalse _cond0
Move 1,R2
Jump _end0
_cond0:
Move 0,R2
_end0:
Compare 0,R2
JumpTrue _end1
_cond1:
Return Rdummy
_end1:

#Library call printi at line 21
Move i0,R1
Library __printi(R1),Rdummy

#Library call printi at line 22
Move arr0,R1

#Math binary operation '-' at line 22
Move arr0,R3
ArrayLength R3,R4
Move 1,R3
Sub R3,R4
MoveArray R1[R4],R3
Library __printi(R3),Rdummy

#Library call println at line 23
Move s0,R3
Library __println(R3),Rdummy

#Library call printb at line 24
Move sd0,R3
MoveField R3.4,R0
MoveArray R0[0],R5
MoveField R5.1,R3
Library __printb(R3),Rdummy

#Library call printb at line 25
Move sd0,R3
MoveField R3.4,R5
MoveArray R5[1],R6
MoveField R6.1,R3
Library __printb(R3),Rdummy

#Assignment on line 26
Move 4,R3
Move sd0,R7
MoveField R3,R7.1

#Assignment on line 27
Move 55,R3
Move sd0,R5
MoveField R5.3,R6
MoveArray R3,R6[3]

#Assignment on line 28

#Math binary operation '+' at line 28

#Math binary operation '+' at line 28

#Math binary operation '+' at line 28
Move str2,R3
Move str3,R5
Library __stringCat(R5,R3),R6
Move str1,R3
Library __stringCat(R6,R3),R5
Move str0,R3
Library __stringCat(R5,R3),R6
Move sd0,R3
MoveField R6,R3.2

#Virtual Call test at line 29
Move this,R3
Move sd0,R5
MoveField R5.1,R6
Move sd0,R7
MoveField R7.3,R5
Move sd0,R8
MoveField R8.2,R7
Move sd0,R9
VirtualCall R3.0(sd0=R9,s0=R7,arr0=R5,i0=R6),Rdummy
Return 9999

##############################

#test in Falafel
_Falafel_test:

#Library call printi at line 35
Move i0,R10
Library __printi(R10),Rdummy

#Library call printi at line 36
Move arr0,R10

#Math binary operation '-' at line 36
Move arr0,R11
ArrayLength R11,R12
Move 1,R11
Sub R11,R12
MoveArray R10[R12],R11
Library __printi(R11),Rdummy

#Library call println at line 37
Move s0,R11
Library __println(R11),Rdummy

#Library call printb at line 38
Move c0,R11
MoveArray R11[0],R13
MoveField R13.1,R8
Library __printb(R8),Rdummy

#Assignment on line 39
Move 99,R8
Move R8,i0

#Assignment on line 40
Move 88,R8
Move arr0,R11

#Math binary operation '-' at line 40
Move arr0,R13
ArrayLength R13,R14
Move 1,R13
Sub R13,R14
MoveArray R8,R11[R14]

#Assignment on line 41
Move str4,R8
Move R8,s0

#Library call printi at line 42
Move i0,R8
Library __printi(R8),Rdummy

#Library call printi at line 43
Move arr0,R8

#Math binary operation '-' at line 43
Move arr0,R11
ArrayLength R11,R13
Move 1,R11
Sub R11,R13
MoveArray R8[R13],R11
Library __printi(R11),Rdummy

#Library call println at line 44
Move s0,R11
Library __println(R11),Rdummy
Return 9999

##############################

#main in Shnizel_Ayala
_ic_main:

#New Class Shnizel_Dag at line 50
Library __allocateObject(20),R11
MoveField _DV_Shnizel_Dag,R11.0
Move R11,sd36

#Assignment on line 51
Move 7,R11
Move sd36,R14
MoveField R11,R14.1

#Assignment on line 52
Move 4,R8
Mul 4,R8
Library __allocateArray(R8),R11
Move sd36,R8
MoveField R11,R8.3

#Assignment on line 53
Move 0,R8
Move sd36,R11
MoveField R11.3,R13
MoveArray R8,R13[0]

#Assignment on line 54
Move 1,R8
Move sd36,R11
MoveField R11.3,R13
MoveArray R8,R13[1]

#Assignment on line 55
Move 2,R8
Move sd36,R11
MoveField R11.3,R13
MoveArray R8,R13[2]

#Assignment on line 56
Move 3,R8
Move sd36,R11
MoveField R11.3,R13
MoveArray R8,R13[3]

#Assignment on line 57

#Math binary operation '+' at line 57

#Math binary operation '+' at line 57

#Math binary operation '+' at line 57
Move str2,R8
Move str3,R11
Library __stringCat(R11,R8),R13
Move str6,R8
Library __stringCat(R13,R8),R11
Move str0,R8
Library __stringCat(R11,R8),R13
Move sd36,R8
MoveField R13,R8.2

#Assignment on line 58
Move 2,R8
Mul 4,R8
Library __allocateArray(R8),R11
Move sd36,R8
MoveField R11,R8.4

#Assignment on line 59

#New Class Chips at line 59
Library __allocateObject(8),R8
MoveField _DV_Chips,R8.0
Move sd36,R11
MoveField R11.4,R13
MoveArray R8,R13[0]

#Assignment on line 60

#New Class Chips at line 60
Library __allocateObject(8),R8
MoveField _DV_Chips,R8.0
Move sd36,R11
MoveField R11.4,R13
MoveArray R8,R13[1]

#Assignment on line 61
Move 1,R8
Move sd36,R11
MoveField R11.4,R13
MoveArray R13[0],R14
MoveField R8,R14.1

#Assignment on line 62
Move 0,R8
Move sd36,R11
MoveField R11.4,R13
MoveArray R13[1],R14
MoveField R8,R14.1

#New Class Gidim at line 63
Library __allocateObject(8),R8
MoveField _DV_Gidim,R8.0
Move R8,g37

#Virtual Call test at line 64
Move g37,R8
Move sd36,R11
MoveField R11.1,R13
Move sd36,R14
MoveField R14.3,R11
Move sd36,R15
MoveField R15.2,R14
Move sd36,R16
VirtualCall R8.0(sd0=R16,s0=R14,arr0=R11,i0=R13),Rdummy

#Static Call test at line 65
Move sd36,R17
MoveField R17.1,R15
Move sd36,R18
MoveField R18.3,R17
Move sd36,R19
MoveField R19.2,R18
Move sd36,R20
MoveField R20.4,R19
StaticCall _Falafel_test(c0=R19,s0=R18,arr0=R17,i0=R15),Rdummy
Library __exit(0),Rdummy

##############################
